# This is the default profile
[env.development]
# This only controls the diesel CLI and GDLK in tests. When running the server,
# it pulls from the config file instead.
DATABASE_URL = "postgres://root:root@localhost/gdlk?connect_timeout=10"
TEST_DATABASE_URL = "postgres://root:root@localhost/gdlk_test?connect_timeout=10"

[env.docker]
# This only controls the diesel CLI and GDLK in tests. When running the server,
# it pulls from the config file instead.
DATABASE_URL = "postgres://root:root@db/gdlk?connect_timeout=10"
TEST_DATABASE_URL = "postgres://root:root@db/gdlk_test?connect_timeout=10"

[tasks.db]
# TODO - only install w/ postgres feature
# install_crate = { crate_name = "diesel_cli", binary = "diesel", test_arg = "--help" }

# Alias for the diesel CLI
[tasks.diesel]
extend = "db"
command = "diesel"
args = ["${@}"]

[tasks.db-setup]
extend = "diesel"
args = ["db", "setup"]

[tasks.db-reset]
extend = "diesel"
args = ["db", "reset"]

[tasks.migrations]
extend = "diesel"
dependencies = ["db-setup"]
args = ["migration", "run"]

[tasks.seed]
dependencies = ["migrations"]
script = [
'''
for f in ./seeds/*.sql; do
    psql $DATABASE_URL -f $f
done
'''
]

[tasks.start]
dependencies = ["db-setup"]
command = "cargo"
args = ["watch", "-x", "run -- server"]

[tasks.secrets]
script = [
'''

src=config/dev.example.json
dest=config/dev.json

# Create the file if it doesn't exist
if [ ! -f $dest ]; then
    cp $src $dest
    echo "Copied $src -> $dest"
fi

# Set secret key if possible
if [ $(command -v jq) ]; then
    secret_key=$(head -c 64 < /dev/urandom | base64 -w 0)
    new_value=$(jq ".secret_key = \"$secret_key\"" $dest)
    echo $new_value > $dest
    echo "$dest: Set new secret key"
else
    echo "jq not installed, cannot set secret key, skipping"
fi

echo "You will need to set all OpenID client IDs and secrets manually."
'''
]

# ===== Test tasks =====

[tasks.test-db-reset]
extend = "diesel"
env = { DATABASE_URL = "${TEST_DATABASE_URL}" }
# --locked-schema prevents changing schema.rs, which would trigger an API reload
args = ["db", "reset", "--locked-schema"]

[tasks.test]
dependencies = ["test-db-reset"]
# This inherits the DATABASE_URL from test-db-reset,
# which might be a bug in cargo-make but who cares
command = "cargo"
args = [
    "test",
    "${@}",
    "--",
    "--test-threads=1",
    "--nocapture",
]

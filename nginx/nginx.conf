user nginx;
worker_processes auto;

pid /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    types {
        application/wasm wasm;
    }

    ssl_certificate     /app/certs/${GDLK_HOSTNAME}/fullchain.pem;
    ssl_certificate_key /app/certs/${GDLK_HOSTNAME}/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for" '
        '"$host" sn="$server_name" ' 'rt=$request_time '
        'ua="$upstream_addr" us="$upstream_status" '
        'ut="$upstream_response_time" ul="$upstream_response_length" '
        'cs=$upstream_cache_status' ;
    access_log /var/log/nginx/access.log main_ext;
    error_log  /var/log/nginx/error.log warn;


    # Redirect HTTP to HTTPS
    server {
        server_name    ~.*;
        listen         80;
        return         301 https://$host$request_uri;
    }

    # Return 404 for any incorrect hostnames
    server {
        listen      443 ssl;
        server_name _;
        return      404;
    }

    server {
        server_name ${GDLK_HOSTNAME};
        listen      443 ssl;

        root /app/static/;
        index index.html;
        charset utf-8;

        location / {
            try_files $uri /index.html;
        }

        location ~/(api)/ {
            proxy_pass                  http://api:8000;
            proxy_http_version          1.1;
            proxy_set_header Host       $host;
            proxy_set_header Upgrade    $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }

}

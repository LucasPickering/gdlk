name: Lint, Test, and Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: "[ALL] Clippy and Rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Install dependencies
        run: |
          rustup component add rustfmt clippy
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D clippy::all

  test-core:
    name: "[CORE] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p gdlk

  test-wasm:
    name: "[WASM] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Install wasm-pack
        run: curl -sSLf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh
      - name: Run tests
        working-directory: crates/wasm
        # I couldn't get browser tests to work, but node is fine since we aren't
        # doing any DOM stuff
        run: wasm-pack test --node

  test-frontend:
    name: "[FE] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Lint Frontend
        run: |
          npm run tsc
          npm run lint
